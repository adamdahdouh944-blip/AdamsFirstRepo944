#Command Line RPG Game PsuedoCode

#GAME FUNCTIONS

#CREATE CHARACTER
    #Create player stats Dictionary

from hero import Hero
from character import character
from enemy import Enemy
from Goblin import Goblin

#CHARACTER OBJECT CLASSES
player = Hero()
gobby = Goblin()

#Quit Function
def QuitGame():
    print ("You Chose to Flee\n")
    print("GAME OVER")
    return False

#Game World Generator Function
def world_generator(x, y):
    #Use Nested for loop to create Grid Array 
    print("\nDisplaying game world (11x11 grid): ")
    game_world = [['.' for i in range(x)] for j in range(y)]

    #Place the player in the center of the grid

    update_player_position(game_world, player.position)
    update_player_position(game_world, gobby.position)


    #Print game world#
    for row in game_world:
        for cell in row:
            print(cell, end=' ')
        print()
    
    return game_world
    

def update_player_position(game_world, position):
    if (position == player.position):
        game_world[position[0]][position[1]] = 'P'
        return game_world
    if (position == gobby.position):
        game_world[position[0]][position[1]] = 'G'
        return game_world
    



#game loop condition
isPlaying = True

#player name input
player.stats["name"] = input ("What is your name?\n")

#GAME LOOP 
while(isPlaying):
    print("Game is Running\n")

    player.get_stats()

    game_world = world_generator(11, 11)

#CREATE PLAYER INPUTS
    action = input("\nSelect Action: Attack, Move, Use or Flee\n").lower()
    print(f"Player Action : {action}")

    if (action == "flee"):
        isPlaying = QuitGame() #<--- isPlaying = False
    
    elif(action == "attack"):
        player.attack() #Temporary

    elif(action == "use"):
        player.use_item()

    elif(action == "move"):
        player.position = player.move(player.position)
        update_player_position(game_world, player.position)       
    else:
        print("Thats not an action you can do")

#ENEMY TURN     
    gobby.move(gobby.position)
